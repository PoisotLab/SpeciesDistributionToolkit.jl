import{_ as l,c as p,j as i,a,G as t,a2 as n,B as h,o as r}from"./chunks/framework.jZ-ZOMvL.js";const f=JSON.parse('{"title":"Explanations","description":"","frontmatter":{},"headers":[],"relativePath":"explanations.md","filePath":"explanations.md","lastUpdated":null}'),o={name:"explanations.md"},d={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""};function g(u,s,E,y,b,m){const e=h("Badge");return r(),p("div",null,[s[9]||(s[9]=i("h1",{id:"explanations",tabindex:"-1"},[a("Explanations "),i("a",{class:"header-anchor",href:"#explanations","aria-label":'Permalink to "Explanations"'},"​")],-1)),s[10]||(s[10]=i("h2",{id:"Shapley-values",tabindex:"-1"},[a("Shapley values "),i("a",{class:"header-anchor",href:"#Shapley-values","aria-label":'Permalink to "Shapley values {#Shapley-values}"'},"​")],-1)),i("details",d,[i("summary",null,[s[0]||(s[0]=i("a",{id:"SDeMo.explain",href:"#SDeMo.explain"},[i("span",{class:"jlbinding"},"SDeMo.explain")],-1)),s[1]||(s[1]=a()),t(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[2]||(s[2]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">explain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSDM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, j; observation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, instances </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, samples </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, )</span></span></code></pre></div><p>Uses the MCMC approximation of Shapley values to provide explanations to specific predictions. The second argument <code>j</code> is the variable for which the explanation should be provided.</p><p>The <code>observation</code> keywords is a row in the <code>instances</code> dataset for which explanations must be provided. If <code>instances</code> is <code>nothing</code>, the explanations will be given on the training data.</p><p>All other keyword arguments are passed to <code>predict</code>.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/5abe9a6b037d9cfc47f7bf9ee9f8b436606739cd/SDeMo/src/explanations/shapley.jl#L51-L63" target="_blank" rel="noreferrer">source</a></p>',5))]),s[11]||(s[11]=i("h2",{id:"counterfactuals",tabindex:"-1"},[a("Counterfactuals "),i("a",{class:"header-anchor",href:"#counterfactuals","aria-label":'Permalink to "Counterfactuals"'},"​")],-1)),i("details",k,[i("summary",null,[s[3]||(s[3]=i("a",{id:"SDeMo.counterfactual",href:"#SDeMo.counterfactual"},[i("span",{class:"jlbinding"},"SDeMo.counterfactual")],-1)),s[4]||(s[4]=a()),t(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[5]||(s[5]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">counterfactual</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSDM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, yhat, λ; maxiter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, minvar</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5e-5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Generates one counterfactual explanation given an input vector <code>x</code>, and a target rule to reach <code>yhat</code>. The learning rate is <code>λ</code>. The maximum number of iterations used in the Nelder-Mead algorithm is <code>maxiter</code>, and the variance improvement under which the model will stop is <code>minvar</code>. Other keywords are passed to <code>predict</code>.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/5abe9a6b037d9cfc47f7bf9ee9f8b436606739cd/SDeMo/src/explanations/counterfactual.jl#L104-L112" target="_blank" rel="noreferrer">source</a></p>',3))]),s[12]||(s[12]=i("h2",{id:"Partial-responses",tabindex:"-1"},[a("Partial responses "),i("a",{class:"header-anchor",href:"#Partial-responses","aria-label":'Permalink to "Partial responses {#Partial-responses}"'},"​")],-1)),i("details",c,[i("summary",null,[s[6]||(s[6]=i("a",{id:"SDeMo.partialresponse",href:"#SDeMo.partialresponse"},[i("span",{class:"jlbinding"},"SDeMo.partialresponse")],-1)),s[7]||(s[7]=a()),t(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[8]||(s[8]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">partialresponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; inflated</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>This method returns the partial response of applying the trained model to a simulated dataset where all variables <em>except</em> <code>i</code> are set to their mean value. The <code>inflated</code> keywork, when set to <code>true</code>, will instead pick a random value within the range of the observations.</p><p>The different arguments that can follow the variable position are</p><ul><li><p>nothing, where the unique values for the <code>i</code>-th variable are used (sorted)</p></li><li><p>a number, in which point that many evenly spaced points within the range of the variable are used</p></li><li><p>an array, in which case each value of this array is evaluated</p></li></ul><p>All keyword arguments are passed to <code>predict</code>.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/5abe9a6b037d9cfc47f7bf9ee9f8b436606739cd/SDeMo/src/explanations/partialresponse.jl#L31-L47" target="_blank" rel="noreferrer">source</a></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">partialresponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, j</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); inflated</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>This method returns the partial response of applying the trained model to a simulated dataset where all variables <em>except</em> <code>i</code> and <code>j</code> are set to their mean value.</p><p>This function will return a grid corresponding to evenly spaced values of <code>i</code> and <code>j</code>, the size of which is given by the last argument <code>s</code> (defaults to 50 × 50).</p><p>All keyword arguments are passed to <code>predict</code>.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/5abe9a6b037d9cfc47f7bf9ee9f8b436606739cd/SDeMo/src/explanations/partialresponse.jl#L54-L66" target="_blank" rel="noreferrer">source</a></p>',11))])])}const C=l(o,[["render",g]]);export{f as __pageData,C as default};
