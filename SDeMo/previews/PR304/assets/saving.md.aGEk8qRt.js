import{_ as n,c as o,j as i,a as e,G as t,a2 as l,B as d,o as r}from"./chunks/framework.DzxOfth8.js";const v=JSON.parse('{"title":"Saving models","description":"","frontmatter":{},"headers":[],"relativePath":"saving.md","filePath":"saving.md","lastUpdated":null}'),p={name:"saving.md"},h={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""};function c(g,s,m,u,b,y){const a=d("Badge");return r(),o("div",null,[s[6]||(s[6]=i("h1",{id:"Saving-models",tabindex:"-1"},[e("Saving models "),i("a",{class:"header-anchor",href:"#Saving-models","aria-label":'Permalink to "Saving models {#Saving-models}"'},"â€‹")],-1)),i("details",h,[i("summary",null,[s[0]||(s[0]=i("a",{id:"SDeMo.loadsdm",href:"#SDeMo.loadsdm"},[i("span",{class:"jlbinding"},"SDeMo.loadsdm")],-1)),s[1]||(s[1]=e()),t(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[2]||(s[2]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">loadsdm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Loads a model to a <code>JSON</code> file. The keyword arguments are passed to <code>train!</code>. The model is trained in full upon loading.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/0065e4af5264b9556089f7be1418c7d91b74ec45/SDeMo/src/utilities/io.jl#L50-L55" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",k,[i("summary",null,[s[3]||(s[3]=i("a",{id:"SDeMo.writesdm",href:"#SDeMo.writesdm"},[i("span",{class:"jlbinding"},"SDeMo.writesdm")],-1)),s[4]||(s[4]=e()),t(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[5]||(s[5]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">writesdm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SDM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Writes a model to a <code>JSON</code> file. This method is very bare-bones, and only saves the <em>structure</em> of the model, as well as the data.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/0065e4af5264b9556089f7be1418c7d91b74ec45/SDeMo/src/utilities/io.jl#L38-L43" target="_blank" rel="noreferrer">source</a></p>',3))])])}const E=n(p,[["render",c]]);export{v as __pageData,E as default};
