var documenterSearchIndex = {"docs":
[{"location":"#PseudoAbsences","page":"PseudoAbsences","title":"PseudoAbsences","text":"","category":"section"},{"location":"#PseudoAbsences.backgroundpoints-Union{Tuple{T}, Tuple{T, Int64}} where T<:SimpleSDMLayers.SDMLayer","page":"PseudoAbsences","title":"PseudoAbsences.backgroundpoints","text":"backgroundpoints(layer::T, n::Int; kwargs...) where {T <: SimpleSDMLayer}\n\nGenerates background points based on a layer that gives the weight of each cell in the final sample. The additional keywords arguments are passed to StatsBase.sample, which is used internally. This includes the replace keyword to determine whether sampling should use replacement.\n\n\n\n\n\n","category":"method"},{"location":"#PseudoAbsences.pseudoabsencemask-Tuple{Type{DistanceToEvent}, SimpleSDMLayers.SDMLayer{Bool}}","page":"PseudoAbsences","title":"PseudoAbsences.pseudoabsencemask","text":"pseudoabsencemask( ::Type{DistanceToEvent}, presences::SDMLayer{Bool}; f = minimum, )\n\nGenerates a mask for pseudo-absences using the distance to event method. Candidate cells are weighted according to their distance to a known observation, with far away places being more likely. Depending on the distribution of distances, it may be a very good idea to flatten this layer using log or an exponent. The f function is used to determine which distance is reported (minimum by default, but can be any other relevant function).\n\n\n\n\n\n","category":"method"},{"location":"#PseudoAbsences.pseudoabsencemask-Tuple{Type{RandomSelection}, SimpleSDMLayers.SDMLayer{Bool}}","page":"PseudoAbsences","title":"PseudoAbsences.pseudoabsencemask","text":"pseudoabsencemask(::Type{RandomSelection}, presences::SDMLayer{Bool})\n\nGenerates a mask for pseudo-absences using the random selection method. Candidate cells for the pseudo-absence mask are (i) within the bounding box of the layer (use SurfaceRangeEnvelope to use the presences bounding box), and (ii) valued in the layer.\n\n\n\n\n\n","category":"method"},{"location":"#PseudoAbsences.pseudoabsencemask-Tuple{Type{SurfaceRangeEnvelope}, SimpleSDMLayers.SDMLayer{Bool}}","page":"PseudoAbsences","title":"PseudoAbsences.pseudoabsencemask","text":"pseudoabsencemask(::Type{SurfaceRangeEnvelope}, presences::SDMLayer{Bool})\n\nGenerates a mask from which pseudo-absences can be drawn, by picking cells that are (i) within the bounding box of occurrences, (ii) valued in the layer, and (iii) not already occupied by an occurrence\n\n\n\n\n\n","category":"method"},{"location":"#PseudoAbsences.pseudoabsencemask-Tuple{Type{WithinRadius}, SimpleSDMLayers.SDMLayer{Bool}}","page":"PseudoAbsences","title":"PseudoAbsences.pseudoabsencemask","text":"pseudoabsencemask(::Type{WithinRadius}, presences::SDMLayer{Bool}; distance::Number = 100.0, )\n\nGenerates a mask for pseudo-absences where pseudo-absences can be within a distance (in kilometers) of the original observation. Internally, this uses DistanceToEvent.\n\n\n\n\n\n","category":"method"},{"location":"#PseudoAbsences.DistanceToEvent","page":"PseudoAbsences","title":"PseudoAbsences.DistanceToEvent","text":"DistanceToEvent\n\nGenerates a weight for the pseudo-absences based on the distance to cells with a true value. The distances are always measured in km using the haversine formula.\n\n\n\n\n\n","category":"type"},{"location":"#PseudoAbsences.PseudoAbsenceGenerator","page":"PseudoAbsences","title":"PseudoAbsences.PseudoAbsenceGenerator","text":"PseudoAbsenceGenerator\n\nAbstract type to which all of the pseudo-absences generator types belong. Note that the pseudo-absence types are singleton types, and the arguments are passed when generating the pseudo-absence mask.\n\n\n\n\n\n","category":"type"},{"location":"#PseudoAbsences.RandomSelection","page":"PseudoAbsences","title":"PseudoAbsences.RandomSelection","text":"RandomSelection\n\nGenerates pseudo-absences at random within the layer. The full extent is considered, and cells with a true value cannot be part of the background sample.\n\n\n\n\n\n","category":"type"},{"location":"#PseudoAbsences.SurfaceRangeEnvelope","page":"PseudoAbsences","title":"PseudoAbsences.SurfaceRangeEnvelope","text":"SurfaceRangeEnvelope\n\nGenerates pseudo-absences at random within the geographic range covered by actual occurrences. Cells with presences cannot be part of the background sample.\n\n\n\n\n\n","category":"type"},{"location":"#PseudoAbsences.WithinRadius","page":"PseudoAbsences","title":"PseudoAbsences.WithinRadius","text":"WithinRadius\n\nGenerates pseudo-absences within a set radius (in kilometers) around each occurrence. Internally, this relies on DistanceToEvent.\n\n\n\n\n\n","category":"type"}]
}
