import{_ as o,C as r,c as d,o as h,ag as n,j as e,G as a,a as t,w as l}from"./chunks/framework.CPZFeiPD.js";const R=JSON.parse('{"title":"The dataset interface","description":"","frontmatter":{},"headers":[],"relativePath":"reference/datasets/interface.md","filePath":"reference/datasets/interface.md","lastUpdated":null}'),p={name:"reference/datasets/interface.md"},k={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},B={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""};function S(_,s,j,w,A,C){const i=r("Badge");return h(),d("div",null,[s[60]||(s[60]=n('<h1 id="The-dataset-interface" tabindex="-1">The dataset interface <a class="header-anchor" href="#The-dataset-interface" aria-label="Permalink to &quot;The dataset interface {#The-dataset-interface}&quot;">​</a></h1><p>This page is meant for <em>contributors</em> to the package, and specifically provides information on the interface, what to overload, and why.</p><p>All of the methods that form the interface have two versions: one for current data, and one for future data. The default behavior of the interface is for the version on future data to fall back to the version for current data (<em>i.e.</em> we assume that future data are provided with the same format as current data). This means that most of the functions will not need to be overloaded when adding a provider with support for future data.</p><p>The interface is built around the idea that <em>Julia</em> will use the most specific version of a method first, and resort to the less generic ones when there are multiple matches. A good example is the <code>BioClim</code> dataset, provided by a number of sources, that often has different URLs and filenames. This is handled (in <em>e.g.</em> <code>CHELSA2</code>) by writing a method for the general case of any dataset <code>RasterData{CHELSA2,T}</code> (using a <code>Union</code> type), and then a specific method on <code>RasterData{CHELSA2,BioClim}</code>. In the case of <code>CHELSA2</code>, the general method handles all datasets <em>except</em> <code>BioClim</code>, which makes the code much easier to write and maintain.</p><h2 id="Compatibility-between-datasets-and-providers" tabindex="-1">Compatibility between datasets and providers <a class="header-anchor" href="#Compatibility-between-datasets-and-providers" aria-label="Permalink to &quot;Compatibility between datasets and providers {#Compatibility-between-datasets-and-providers}&quot;">​</a></h2><p>The inner constructor for <code>RasterData</code> involves a call to <code>provides</code>, which must return <code>true</code> for the type to be constructed. The generic method for <code>provides</code> returns <code>false</code>, so additional provider/dataset pairs <em>must</em> be overloaded to return <code>true</code> in order for the corresponding <code>RasterData</code> type to exist.</p><p>In practice, especially when there are multiple datasets for a single provider, the easiest way is to define a <code>Union</code> type and overload based on membership to this union type, as touched upon earlier in this document.</p>',7)),e("details",k,[e("summary",null,[s[0]||(s[0]=e("a",{id:"SimpleSDMDatasets.provides",href:"#SimpleSDMDatasets.provides"},[e("span",{class:"jlbinding"},"SimpleSDMDatasets.provides")],-1)),s[1]||(s[1]=t()),a(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[4]||(s[4]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes min-light min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">provides</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">(</span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;">Type{P}</span><span style="--shiki-light:#212121;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;"> ::</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;">Type{D}</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">) </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> {P </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;"> RasterProvider</span><span style="--shiki-light:#212121;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> D </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;"> RasterDataset</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">}</span></span></code></pre></div><p>This is the core function upon which the entire interface is built. Its purpose is to specify whether a specific dataset is provided by a specific provider. Note that this function takes two arguments, as opposed to a <code>RasterData</code> argument, because it is called in the <em>inner</em> constructor of <code>RasterData</code>: you cannot instantiate a <code>RasterData</code> with an incompatible provider/dataset combination.</p><p>The default value of this function is <code>false</code>, and to allow the use of a dataset with a provider, it is <em>required</em> to overload it for this specific pair so that it returns <code>true</code>.</p>',3)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[2]||(s[2]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/1eece9a7a89aa7a7661688b64955556184ebf8b3/SimpleSDMDatasets/src/interface.jl#L1-L14",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1}),s[5]||(s[5]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes min-light min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">provides</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">(</span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;">R</span><span style="--shiki-light:#212121;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;"> ::</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;">F</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">) </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> {R </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;"> RasterData</span><span style="--shiki-light:#212121;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> F </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;"> Future</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">}</span></span></code></pre></div><p>This method for <code>provides</code> specifies whether a <code>RasterData</code> combination has support for the value of the <code>Future</code> (a combination of a <code>FutureScenario</code> and a <code>FutureModel</code>) given as the second argument. Note that this function is not called as part of the <code>Future</code> constructor (because models and scenarios are messy <em>and</em> dataset dependent), but is still called when requesting data.</p><p>The default value of this function is <code>false</code>, and to allow the use of a future dataset with a given provider, it is <em>required</em> to overload it so that it returns <code>true</code>.</p>',3)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[3]||(s[3]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/1eece9a7a89aa7a7661688b64955556184ebf8b3/SimpleSDMDatasets/src/interface.jl#L17-L29",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[61]||(s[61]=e("h2",{id:"Type-of-object-downloaded",tabindex:"-1"},[t("Type of object downloaded "),e("a",{class:"header-anchor",href:"#Type-of-object-downloaded","aria-label":'Permalink to "Type of object downloaded {#Type-of-object-downloaded}"'},"​")],-1)),s[62]||(s[62]=e("p",null,[t("The specification about the format of downloaded files is managed by "),e("code",null,"downloadtype"),t(". By default, we assume that a request to a usable dataset is returning a single file, but this can be overloaded for the providers who return an archive.")],-1)),e("details",F,[e("summary",null,[s[6]||(s[6]=e("a",{id:"SimpleSDMDatasets.downloadtype",href:"#SimpleSDMDatasets.downloadtype"},[e("span",{class:"jlbinding"},"SimpleSDMDatasets.downloadtype")],-1)),s[7]||(s[7]=t()),a(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[10]||(s[10]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes min-light min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">downloadtype</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">(</span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;">R</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">) </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> {R </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;"> RasterData</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">}</span></span></code></pre></div><p>This method returns a <code>RasterDownloadType</code> that is used <em>internally</em> to be more explicit about the type of object that is downloaded from the raster source. The supported values are <code>_file</code> (the default, which is an ascii, geotiff, NetCDF, etc. single file), and <code>_zip</code> (a zip archive containing files). This is a trait because we <em>cannot</em> trust file extensions.</p>',2)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[8]||(s[8]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/1eece9a7a89aa7a7661688b64955556184ebf8b3/SimpleSDMDatasets/src/interface.jl#L32-L40",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1}),s[11]||(s[11]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes min-light min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">downloadtype</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">(data</span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;">R</span><span style="--shiki-light:#212121;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;"> ::</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;">F</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">) </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> {R </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;"> RasterData</span><span style="--shiki-light:#212121;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> F </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;"> Future</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">}</span></span></code></pre></div><p>This method provides the type of the downloaded object for a combination of a raster source and a future scenario as a <code>RasterDownloadType</code>.</p><p>If no overload is given, this will default to <code>downloadtype(data)</code>, as we can assume that the type of downloaded object is the same for both current and future scenarios.</p>',3)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[9]||(s[9]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/1eece9a7a89aa7a7661688b64955556184ebf8b3/SimpleSDMDatasets/src/interface.jl#L43-L52",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[63]||(s[63]=n('<p>The return type of the <code>downloadtype</code> must be one of the <code>RasterDownloadType</code> enum, which can be extended if adding a new provider requires a new format for the download.</p><h2 id="Type-of-object-stored" tabindex="-1">Type of object stored <a class="header-anchor" href="#Type-of-object-stored" aria-label="Permalink to &quot;Type of object stored {#Type-of-object-stored}&quot;">​</a></h2><p>The specification about the format of the information contained in the downloaded type is managed by <code>filetype</code>. By default, we assume that a request to a usable dataset is returning a <code>tiff</code>, but this can be overloaded for the providers who return data in another format. Note that <em>if</em> the download type is an archive, the file type describes the format of the files within the archive.</p>',3)),e("details",c,[e("summary",null,[s[12]||(s[12]=e("a",{id:"SimpleSDMDatasets.filetype",href:"#SimpleSDMDatasets.filetype"},[e("span",{class:"jlbinding"},"SimpleSDMDatasets.filetype")],-1)),s[13]||(s[13]=t()),a(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[16]||(s[16]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes min-light min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">filetype</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">(</span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;">R</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">) </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> {R </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;"> RasterData</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">}</span></span></code></pre></div><p>This method returns a <code>RasterFileType</code> that represents the format of the raster data. <code>RasterFileType</code> is an enumerated type. This overload is particularly important as it will determine how the returned file path should be read.</p><p>The default value is <code>_tiff</code>.</p>',3)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[14]||(s[14]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/1eece9a7a89aa7a7661688b64955556184ebf8b3/SimpleSDMDatasets/src/interface.jl#L55-L63",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1}),s[17]||(s[17]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes min-light min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">filetype</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">(data</span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;">R</span><span style="--shiki-light:#212121;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;"> ::</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;">F</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">) </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> {R </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;"> RasterData</span><span style="--shiki-light:#212121;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> F </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;"> Future</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">}</span></span></code></pre></div><p>This method provides the format of the stored raster for a combination of a raster source and a future scenario as a <code>RasterFileType</code>.</p><p>If no overload is given, this will default to <code>filetype(data)</code>, as we can assume that the raster format is the same for both current and future scenarios.</p>',3)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[15]||(s[15]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/1eece9a7a89aa7a7661688b64955556184ebf8b3/SimpleSDMDatasets/src/interface.jl#L66-L74",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[64]||(s[64]=e("p",null,[t("The return type of the "),e("code",null,"filetype"),t(" must be one of the "),e("code",null,"RasterFileType"),t(" enum, which can be extended if adding a new provider requires a new format for the download.")],-1)),s[65]||(s[65]=e("h2",{id:"Available-resolutions",tabindex:"-1"},[t("Available resolutions "),e("a",{class:"header-anchor",href:"#Available-resolutions","aria-label":'Permalink to "Available resolutions {#Available-resolutions}"'},"​")],-1)),e("details",u,[e("summary",null,[s[18]||(s[18]=e("a",{id:"SimpleSDMDatasets.resolutions",href:"#SimpleSDMDatasets.resolutions"},[e("span",{class:"jlbinding"},"SimpleSDMDatasets.resolutions")],-1)),s[19]||(s[19]=t()),a(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[22]||(s[22]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes min-light min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolutions</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">(</span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;">R</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">) </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> {R </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;"> RasterData</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">}</span></span></code></pre></div><p>This method controls whether the dataset has a <em>resolution</em>, <em>i.e.</em> a grid size. If this is <code>nothing</code> (the default), it means that the dataset is only given at a set resolution.</p><p>An overload of this method is <em>required</em> when there are multiple resolutions available, and <em>must</em> return a <code>Dict</code> with numeric keys (for the resolution) and a string value giving an explanation of the resolution.</p><p>Any dataset with a return value that is not <code>nothing</code> <em>must</em> accept the <code>resolution</code> keyword.</p>',4)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[20]||(s[20]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/1eece9a7a89aa7a7661688b64955556184ebf8b3/SimpleSDMDatasets/src/interface.jl#L77-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1}),s[23]||(s[23]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes min-light min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolutions</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">(data</span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;">R</span><span style="--shiki-light:#212121;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;"> ::</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;">F</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">) </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> {R </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;"> RasterData</span><span style="--shiki-light:#212121;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> F </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;"> Future</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">}</span></span></code></pre></div><p>This methods control the <code>resolutions</code> for a future dataset. Unless overloaded, it will return <code>resolutions(data)</code>.</p>',2)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[21]||(s[21]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/1eece9a7a89aa7a7661688b64955556184ebf8b3/SimpleSDMDatasets/src/interface.jl#L93-L98",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[66]||(s[66]=e("h2",{id:"Available-layers",tabindex:"-1"},[t("Available layers "),e("a",{class:"header-anchor",href:"#Available-layers","aria-label":'Permalink to "Available layers {#Available-layers}"'},"​")],-1)),e("details",y,[e("summary",null,[s[24]||(s[24]=e("a",{id:"SimpleSDMDatasets.layers",href:"#SimpleSDMDatasets.layers"},[e("span",{class:"jlbinding"},"SimpleSDMDatasets.layers")],-1)),s[25]||(s[25]=t()),a(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[27]||(s[27]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes min-light min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">layers</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">(</span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;">R</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">) </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> {R </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;"> RasterData</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">}</span></span></code></pre></div><p>This method controls whether the dataset has named layers. If this is <code>nothing</code> (the default), it means that the dataset will have a single layer.</p><p>An overload of this method is <em>required</em> when there are multiple layers available, and <em>must</em> return a <code>Vector</code>, usually of <code>String</code>. Note that by default, the layers can also be accessed by using an <code>Integer</code>, in which case <code>layer=i</code> will be the <em>i</em>-th entry in <code>layers(data)</code>.</p><p>Any dataset with a return value that is not <code>nothing</code> <em>must</em> accept the <code>layer</code> keyword.</p>',4)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[26]||(s[26]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/1eece9a7a89aa7a7661688b64955556184ebf8b3/SimpleSDMDatasets/src/interface.jl#L133-L146",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",m,[e("summary",null,[s[28]||(s[28]=e("a",{id:"SimpleSDMDatasets.layerdescriptions",href:"#SimpleSDMDatasets.layerdescriptions"},[e("span",{class:"jlbinding"},"SimpleSDMDatasets.layerdescriptions")],-1)),s[29]||(s[29]=t()),a(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[31]||(s[31]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes min-light min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">layerdescriptions</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">(data</span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;">R</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">) </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> {R </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;"> RasterData</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">}</span></span></code></pre></div><p>Human-readable names the layers. This <em>must</em> be a dictionary mapping the layer names (as returned by <code>layers</code>) to a string explaining the contents of the layers.</p>',2)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[30]||(s[30]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/1eece9a7a89aa7a7661688b64955556184ebf8b3/SimpleSDMDatasets/src/interface.jl#L150-L154",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[67]||(s[67]=e("h2",{id:"Available-months",tabindex:"-1"},[t("Available months "),e("a",{class:"header-anchor",href:"#Available-months","aria-label":'Permalink to "Available months {#Available-months}"'},"​")],-1)),e("details",g,[e("summary",null,[s[32]||(s[32]=e("a",{id:"SimpleSDMDatasets.months",href:"#SimpleSDMDatasets.months"},[e("span",{class:"jlbinding"},"SimpleSDMDatasets.months")],-1)),s[33]||(s[33]=t()),a(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[35]||(s[35]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes min-light min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">months</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">(</span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;">R</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">) </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> {R </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;"> RasterData</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">}</span></span></code></pre></div><p>This method controls whether the dataset has monthly layers. If this is <code>nothing</code> (the default), it means that the dataset is not accessible at a monthly resolution.</p><p>An overload of this method is <em>required</em> when there are multiple months available, and <em>must</em> return a <code>Vector{Dates.Month}</code>.</p><p>Any dataset with a return value that is not <code>nothing</code> <em>must</em> accept the <code>month</code> keyword.</p>',4)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[34]||(s[34]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/1eece9a7a89aa7a7661688b64955556184ebf8b3/SimpleSDMDatasets/src/interface.jl#L101-L113",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[68]||(s[68]=e("h2",{id:"Available-years",tabindex:"-1"},[t("Available years "),e("a",{class:"header-anchor",href:"#Available-years","aria-label":'Permalink to "Available years {#Available-years}"'},"​")],-1)),e("details",b,[e("summary",null,[s[36]||(s[36]=e("a",{id:"SimpleSDMDatasets.timespans",href:"#SimpleSDMDatasets.timespans"},[e("span",{class:"jlbinding"},"SimpleSDMDatasets.timespans")],-1)),s[37]||(s[37]=t()),a(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[39]||(s[39]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes min-light min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timespans</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">(data</span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;">R</span><span style="--shiki-light:#212121;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;"> ::</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;">F</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">) </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> {R </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;"> RasterData</span><span style="--shiki-light:#212121;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> F </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;"> Future</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">}</span></span></code></pre></div><p>For datasets with a <code>Future</code> scenario, this method should return a <code>Vector</code> of <code>Pairs</code>, which are formatted as</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes min-light min-dark vp-code" tabindex="0"><code><span class="line"><span>Year(start) =&gt; Year(end)</span></span></code></pre></div><p>There is a method working on a single <code>RasterData</code> argument, defaulting to returning <code>nothing</code>, but it <em>should never</em> be overloaded.</p>',4)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[38]||(s[38]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/1eece9a7a89aa7a7661688b64955556184ebf8b3/SimpleSDMDatasets/src/interface.jl#L117-L129",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[69]||(s[69]=e("h2",{id:"Additional-keyword-arguments",tabindex:"-1"},[t("Additional keyword arguments "),e("a",{class:"header-anchor",href:"#Additional-keyword-arguments","aria-label":'Permalink to "Additional keyword arguments {#Additional-keyword-arguments}"'},"​")],-1)),e("details",f,[e("summary",null,[s[40]||(s[40]=e("a",{id:"SimpleSDMDatasets.extrakeys",href:"#SimpleSDMDatasets.extrakeys"},[e("span",{class:"jlbinding"},"SimpleSDMDatasets.extrakeys")],-1)),s[41]||(s[41]=t()),a(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[43]||(s[43]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes min-light min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">extrakeys</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">(</span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;">R</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">) </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> {R </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;"> RasterData</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">}</span></span></code></pre></div><p>This method controls whether the dataset has additional keys. If this is <code>nothing</code> (the default), it means that the dataset can be accessed using only the default keys specified in this interface.</p><p>An overload of this method is <em>required</em> when there are additional keywords needed to access the data (<em>e.g.</em> <code>full=true</code> for the <code>EarthEnv</code> land-cover data), and <em>must</em> return a <code>Dict</code>, with <code>Symbol</code> keys and <code>Tuple</code>s of pairs as values.</p><p>The key is the keyword argument passed to <code>downloader</code> and the tuple lists all accepted values, in the format <code>value =&gt; explanation</code>.</p><p>Any dataset with a return value that is not <code>nothing</code> <em>must</em> accept the keyword arguments specified in the return value.</p>',5)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[42]||(s[42]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/1eece9a7a89aa7a7661688b64955556184ebf8b3/SimpleSDMDatasets/src/interface.jl#L159-L176",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[70]||(s[70]=e("h2",{id:"URL-for-the-data-to-download",tabindex:"-1"},[t("URL for the data to download "),e("a",{class:"header-anchor",href:"#URL-for-the-data-to-download","aria-label":'Permalink to "URL for the data to download {#URL-for-the-data-to-download}"'},"​")],-1)),e("details",D,[e("summary",null,[s[44]||(s[44]=e("a",{id:"SimpleSDMDatasets.source",href:"#SimpleSDMDatasets.source"},[e("span",{class:"jlbinding"},"SimpleSDMDatasets.source")],-1)),s[45]||(s[45]=t()),a(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[47]||(s[47]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes min-light min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">source</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">(</span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;">RasterData{P, D}</span><span style="--shiki-light:#212121;--shiki-dark:#BBBBBB;">;</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> kwargs</span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">) </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> {P </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;"> RasterProvider</span><span style="--shiki-light:#212121;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> D </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;"> RasterDataset</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">}</span></span></code></pre></div><p>This method specifies the URL for the data. It defaults to <code>nothing</code>, so this method <em>must</em> be overloaded.</p>',2)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[46]||(s[46]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/1eece9a7a89aa7a7661688b64955556184ebf8b3/SimpleSDMDatasets/src/interface.jl#L203-L208",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[71]||(s[71]=e("h2",{id:"Path-to-the-data-locally",tabindex:"-1"},[t("Path to the data locally "),e("a",{class:"header-anchor",href:"#Path-to-the-data-locally","aria-label":'Permalink to "Path to the data locally {#Path-to-the-data-locally}"'},"​")],-1)),e("details",B,[e("summary",null,[s[48]||(s[48]=e("a",{id:"SimpleSDMDatasets.destination",href:"#SimpleSDMDatasets.destination"},[e("span",{class:"jlbinding"},"SimpleSDMDatasets.destination")],-1)),s[49]||(s[49]=t()),a(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[51]||(s[51]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes min-light min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">destination</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">(</span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;">RasterData{P, D}</span><span style="--shiki-light:#212121;--shiki-dark:#BBBBBB;">;</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> kwargs</span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">) </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> {P </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;"> RasterProvider</span><span style="--shiki-light:#212121;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> D </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;"> RasterDataset</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">}</span></span></code></pre></div><p>This method specifies where the data should be stored <em>locally</em>. By default, it is the <code>_LAYER_PATH</code>, followed by the provider name, followed by the dataset name.</p>',2)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[50]||(s[50]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/1eece9a7a89aa7a7661688b64955556184ebf8b3/SimpleSDMDatasets/src/interface.jl#L180-L186",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[72]||(s[72]=n('<h2 id="URL-for-additional-information" tabindex="-1">URL for additional information <a class="header-anchor" href="#URL-for-additional-information" aria-label="Permalink to &quot;URL for additional information {#URL-for-additional-information}&quot;">​</a></h2><p>The <code>url</code> method will display one URL re-directing users to either the description of the provider, or the description of the dataset. <em>A minima</em>, the version for the <code>RasterProvider</code> should be specified. Note that this must return a <strong>Markdown</strong> string.</p><p>Most of the <code>RasterDataset</code> will have a <em>default</em> blurb, but more specific (<em>i.e.</em> adapted to a particular prodiver) ones can be provided.</p>',3)),e("details",T,[e("summary",null,[s[52]||(s[52]=e("a",{id:"SimpleSDMDatasets.url",href:"#SimpleSDMDatasets.url"},[e("span",{class:"jlbinding"},"SimpleSDMDatasets.url")],-1)),s[53]||(s[53]=t()),a(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[55]||(s[55]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes min-light min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">url</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">(</span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;">P</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">) </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> {P </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;"> DataProvider</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">}</span></span></code></pre></div><p>The URL for the data provider - if there is no specific URL for each dataset, it is enough to define this one.</p>',2)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[54]||(s[54]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/1eece9a7a89aa7a7661688b64955556184ebf8b3/SimpleSDMDatasets/src/interface.jl#L228-L233",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[73]||(s[73]=n('<h2 id="Additional-information-about-a-dataset" tabindex="-1">Additional information about a dataset <a class="header-anchor" href="#Additional-information-about-a-dataset" aria-label="Permalink to &quot;Additional information about a dataset {#Additional-information-about-a-dataset}&quot;">​</a></h2><p>The <code>blurb</code> is a short text explaining what the dataset / provider is about. <em>A minima</em>, the version for the <code>RasterProvider</code> should be specified. In some cases, it is acceptable to only define a version for one <code>RasterDataset</code> and any <code>RasterProvider</code>, although a more specific dispatch can be implemented.</p>',2)),e("details",v,[e("summary",null,[s[56]||(s[56]=e("a",{id:"SimpleSDMDatasets.blurb",href:"#SimpleSDMDatasets.blurb"},[e("span",{class:"jlbinding"},"SimpleSDMDatasets.blurb")],-1)),s[57]||(s[57]=t()),a(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[59]||(s[59]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes min-light min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">blurb</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">(</span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;">Type{P}</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">) </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> {P </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#1976D2;--shiki-dark:#79B8FF;"> RasterProvider</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">}</span></span></code></pre></div>',1)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[58]||(s[58]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/1eece9a7a89aa7a7661688b64955556184ebf8b3/SimpleSDMDatasets/src/interface.jl#L238-L240",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})])])}const P=o(p,[["render",S]]);export{R as __pageData,P as default};
