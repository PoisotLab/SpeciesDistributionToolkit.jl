var documenterSearchIndex = {"docs":
[{"location":"#SimpleSDMDatasets","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets","text":"","category":"section"},{"location":"","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets","text":"Modules = [SimpleSDMDatasets]\nOrder   = [:function, :type]","category":"page"},{"location":"#SimpleSDMDatasets.blurb-Union{Tuple{Type{P}}, Tuple{P}} where P<:RasterProvider","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.blurb","text":"blurb(::Type{P}) where {P <: RasterProvider}\n\n\n\n\n\n","category":"method"},{"location":"#SimpleSDMDatasets.destination-Union{Tuple{RasterData{P, D}}, Tuple{D}, Tuple{P}} where {P<:RasterProvider, D<:RasterDataset}","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.destination","text":"destination(::RasterData{P, D}; kwargs...) where {P <: RasterProvider, D <: RasterDataset}\n\nThis method specifies where the data should be stored locally. By default, it is the _LAYER_PATH, followed by the provider name, followed by the dataset name.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleSDMDatasets.downloader-Union{Tuple{RasterData{P, D}}, Tuple{D}, Tuple{P}} where {P<:RasterProvider, D<:RasterDataset}","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.downloader","text":"SimpleSDMDatasets.downloader\n\n...\n\n\n\n\n\n","category":"method"},{"location":"#SimpleSDMDatasets.downloadtype-Tuple{R} where R<:RasterData","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.downloadtype","text":"downloadtype(::R) where {R <: RasterData}\n\nThis method returns a RasterDownloadType that is used internally to be more explicit about the type of object that is downloaded from the raster source. The supported values are _file (the default, which is an ascii, geotiff, NetCDF, etc. single file), and _zip (a zip archive containing files). This is a trait because we cannot trust file extensions.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleSDMDatasets.downloadtype-Union{Tuple{F}, Tuple{R}, Tuple{R, F}} where {R<:RasterData, F<:Projection}","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.downloadtype","text":"downloadtype(data::R, ::F) where {R <: RasterData, F <: Future}\n\nThis method provides the type of the downloaded object for a combination of a raster source and a future scenario as a RasterDownloadType.\n\nIf no overload is given, this will default to downloadtype(data), as we can assume that the type of downloaded object is the same for both current and future scenarios.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleSDMDatasets.extrakeys-Tuple{R} where R<:RasterData","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.extrakeys","text":"extrakeys(::R) where {R <: RasterData}\n\nThis method controls whether the dataset has additional keys. If this is nothing (the default), it means that the dataset can be accessed using only the default keys specified in this interface.\n\nAn overload of this method is required when there are additional keywords needed to access the data (e.g. full=true for the EarthEnv land-cover data), and must return a Dict, with Symbol keys and Tuples of pairs as values.\n\nThe key is the keyword argument passed to downloader and the tuple lists all accepted values, in the format value => explanation.\n\nAny dataset with a return value that is not nothing must accept the keyword arguments specified in the return value.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleSDMDatasets.filetype-Tuple{R} where R<:RasterData","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.filetype","text":"filetype(::R) where {R <: RasterData}\n\nThis method returns a RasterFileType that represents the format of the raster data. RasterFileType is an enumerated type. This overload is particularly important as it will determine how the returned file path should be read.\n\nThe default value is _tiff.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleSDMDatasets.filetype-Union{Tuple{F}, Tuple{R}, Tuple{R, F}} where {R<:RasterData, F<:Projection}","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.filetype","text":"filetype(data::R, ::F) where {R <: RasterData, F <: Future}\n\nThis method provides the format of the stored raster for a combination of a raster source and a future scenario as a RasterFileType.\n\nIf no overload is given, this will default to filetype(data), as we can assume that the raster format is the same for both current and future scenarios.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleSDMDatasets.keychecker-Tuple{R} where R<:RasterData","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.keychecker","text":"SimpleSDMDatasets.keychecker(data::R; kwargs...) where {R <: RasterData}\n\nChecks that the keyword arguments passed to a downloader are correct, i.e. the data provider / source being retrieved supports them.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleSDMDatasets.layerdescriptions-Tuple{R} where R<:RasterData","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.layerdescriptions","text":"layerdescriptions(data::R) where {R <: RasterData}\n\nHuman-readable names the layers. This must be a dictionary mapping the layer names (as returned by layers) to a string explaining the contents of the layers.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleSDMDatasets.layers-Tuple{R} where R<:RasterData","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.layers","text":"layers(::R) where {R <: RasterData}\n\nThis method controls whether the dataset has named layers. If this is nothing (the default), it means that the dataset will have a single layer.\n\nAn overload of this method is required when there are multiple layers available, and must return a Vector, usually of String. Note that by default, the layers can also be accessed by using an Integer, in which case layer=i will be the i-th entry in layers(data).\n\nAny dataset with a return value that is not nothing must accept the layer keyword.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleSDMDatasets.months-Tuple{R} where R<:RasterData","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.months","text":"months(::R) where {R <: RasterData}\n\nThis method controls whether the dataset has monthly layers. If this is nothing (the default), it means that the dataset is not accessible at a monthly resolution.\n\nAn overload of this method is required when there are multiple months available, and must return a Vector{Dates.Month}.\n\nAny dataset with a return value that is not nothing must accept the month keyword.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleSDMDatasets.provides-Union{Tuple{D}, Tuple{P}, Tuple{Type{P}, Type{D}}} where {P<:RasterProvider, D<:RasterDataset}","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.provides","text":"provides(::Type{P}, ::Type{D}) where {P <: RasterProvider, D <: RasterDataset}\n\nThis is the core function upon which the entire interface is built. Its purpose is to specify whether a specific dataset is provided by a specific provider. Note that this function takes two arguments, as opposed to a RasterData argument, because it is called in the inner constructor of RasterData: you cannot instantiate a RasterData with an incompatible provider/dataset combination.\n\nThe default value of this function is false, and to allow the use of a dataset with a provider, it is required to overload it for this specific pair so that it returns true.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleSDMDatasets.provides-Union{Tuple{F}, Tuple{R}, Tuple{R, F}} where {R<:RasterData, F<:Projection}","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.provides","text":"provides(::R, ::F) where {R <: RasterData, F <: Future}\n\nThis method for provides specifies whether a RasterData combination has support for the value of the Future (a combination of a FutureScenario and a FutureModel) given as the second argument. Note that this function is not called as part of the Future constructor (because models and scenarios are messy and dataset dependent), but is still called when requesting data.\n\nThe default value of this function is false, and to allow the use of a future dataset with a given provider, it is required to overload it so that it returns true.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleSDMDatasets.resolutions-Tuple{R} where R<:RasterData","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.resolutions","text":"resolutions(::R) where {R <: RasterData}\n\nThis method controls whether the dataset has a resolution, i.e. a grid size. If this is nothing (the default), it means that the dataset is only given at a set resolution.\n\nAn overload of this method is required when there are multiple resolutions available, and must return a Dict with numeric keys (for the resolution) and a string value giving an explanation of the resolution.\n\nAny dataset with a return value that is not nothing must accept the resolution keyword.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleSDMDatasets.resolutions-Union{Tuple{F}, Tuple{R}, Tuple{R, F}} where {R<:RasterData, F<:Projection}","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.resolutions","text":"resolutions(data::R, ::F) where {R <: RasterData, F <: Future}\n\nThis methods control the resolutions for a future dataset. Unless overloaded, it will return resolutions(data).\n\n\n\n\n\n","category":"method"},{"location":"#SimpleSDMDatasets.source-Union{Tuple{RasterData{P, D}}, Tuple{D}, Tuple{P}} where {P<:RasterProvider, D<:RasterDataset}","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.source","text":"source(::RasterData{P, D}; kwargs...) where {P <: RasterProvider, D <: RasterDataset}\n\nThis method specifies the URL for the data. It defaults to nothing, so this method must be overloaded.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleSDMDatasets.timespans-Union{Tuple{F}, Tuple{R}, Tuple{R, F}} where {R<:RasterData, F<:Projection}","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.timespans","text":"timespans(data::R, ::F) where {R <: RasterData, F <: Future}\n\nFor datasets with a Future scenario, this method should return a Vector of Pairs, which are formatted as\n\nYear(start) => Year(end)\n\nThere is a method working on a single RasterData argument, defaulting to returning nothing, but it should never be overloaded.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleSDMDatasets.url-Union{Tuple{Type{P}}, Tuple{P}} where P<:RasterProvider","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.url","text":"url(::P) where {P <: DataProvider}\n\nThe URL for the data provider - if there is no specific URL for each dataset, it is enough to define this one.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleSDMDatasets.AmphibianRichness","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.AmphibianRichness","text":"AmphibianRichness\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.AverageTemperature","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.AverageTemperature","text":"AverageTemperature\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.BioClim","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.BioClim","text":"BioClim\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.BiodiversityMapping","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.BiodiversityMapping","text":"BiodiversityMapping\n\nGlobal biodiveristy data from https://biodiversitymapping.org/ - see this website for citation information\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.BirdRichness","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.BirdRichness","text":"BirdRichness\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.CHELSA1","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.CHELSA1","text":"CHELSA1\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.CHELSA2","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.CHELSA2","text":"CHELSA2\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.EarthEnv","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.EarthEnv","text":"EarthEnv\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.Elevation","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.Elevation","text":"Elevation\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.HabitatHeterogeneity","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.HabitatHeterogeneity","text":"HabitatHeterogeneity\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.LandCover","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.LandCover","text":"LandCover\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.MammalRichness","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.MammalRichness","text":"MammalRichness\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.MaximumTemperature","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.MaximumTemperature","text":"MaximumTemperature\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.MinimumTemperature","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.MinimumTemperature","text":"MinimumTemperature\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.PaleoClim","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.PaleoClim","text":"PaleoClim\n\nPaleoclimate data from http://www.paleoclim.org/ - see this website for citation information\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.Precipitation","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.Precipitation","text":"Precipitation\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.Projection","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.Projection","text":"Future{S <: FutureScenario, M <: FutureModel}\n\nThis type is similar to RasterData but describes a combination of a scenario and a model. Note that unlike RasterData, there is no type check in the inner constructor; instead, the way to check that a provider/dataset/scenario/model combination exists is to overload the provides method for a dataset and future.\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.RasterCRS","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.RasterCRS","text":"RasterCRS\n\nThis enum stores the possible coordinate representation system of returned files. They are listed with instances(RasterProjection).\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.RasterData","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.RasterData","text":"RasterData{P <: RasterProvider, D <: RasterDataset}\n\nThe RasterData type is the main user-facing type for SimpleSDMDatasets. Specifically, this is a singleton parametric type, where the two parameters are the type of the RasterProvider and the RasterDataset. Note that the inner constructor calls the provides method on the provider/dataset pair to check that this combination exists.\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.RasterDataset","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.RasterDataset","text":"RasterDataset\n\nThis is an abstract type to label something as being a dataset. Datasets are given by RasterProviders, and the same dataset can have multiple providers.\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.RasterDownloadType","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.RasterDownloadType","text":"RasterDownloadType\n\nThis enum stores the possible types of downloaded files. They are listed with instances(RasterDownloadType), and are currently limited to _file (a file, can be read directly) and _zip (an archive, must be unzipped).\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.RasterFileType","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.RasterFileType","text":"RasterFileType\n\nThis enum stores the possible types of returned files. They are listed with instances(RasterFileType).\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.RasterProvider","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.RasterProvider","text":"RasterProvider\n\nThis is an abstract type to label something as a provider of RasterDatasets. For example, WorldClim2 and CHELSA2 are RasterProviders.\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.SolarRadiation","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.SolarRadiation","text":"SolarRadiation\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.Topography","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.Topography","text":"Topography\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.WaterVaporPressure","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.WaterVaporPressure","text":"WaterVaporPressure\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.WindSpeed","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.WindSpeed","text":"WindSpeed\n\n\n\n\n\n","category":"type"},{"location":"#SimpleSDMDatasets.WorldClim2","page":"SimpleSDMDatasets","title":"SimpleSDMDatasets.WorldClim2","text":"WorldClim2\n\nThis provider offers access to the version 2 of the WorldClim data, accessible from http://www.worldclim.com/version2.\n\n\n\n\n\n","category":"type"}]
}
