var documenterSearchIndex = {"docs":
[{"location":"#Integration-with-the-Phylopic-API","page":"Phylopic.jl","title":"Integration with the Phylopic API","text":"","category":"section"},{"location":"","page":"Phylopic.jl","title":"Phylopic.jl","text":"The Phylopic.jl package offers a simple wrapper on the Phylopic API, to collect silhouettes of species for plots. At the moment, it is a minimal viable product that allows to search for the UUID of images by taxonomic names, then to retrieve the vector file or the thumbnail associated to each image. It also provides the ability to store the credit information for all of the images used in a project.","category":"page"},{"location":"#Finding-images-by-names","page":"Phylopic.jl","title":"Finding images by names","text":"","category":"section"},{"location":"","page":"Phylopic.jl","title":"Phylopic.jl","text":"Phylopic.autocomplete\nPhylopic.imagesof","category":"page"},{"location":"#Phylopic.autocomplete","page":"Phylopic.jl","title":"Phylopic.autocomplete","text":"Phylopic.autocomplete(query::AbstractString)\n\nPerforms an autocomplete query based on a string, which must be at least two characters in length.\n\nThis function will return an array of strings, which can be empty if there are no matches. In you want to do things depending on the values returned, check them with isempty, not isnothing.\n\nThe output of this function, when not empty, can be passed to either Phylopic.nodes or Phylopic.images using their filter_name keyword argument. Note that the filter_name argument accepts a single name, not an array of names.\n\n\n\n\n\n","category":"function"},{"location":"#Phylopic.imagesof","page":"Phylopic.jl","title":"Phylopic.imagesof","text":"imagesof(name::AbstractString; items=1, attribution=false, sharealike=false, nocommercial=false)\n\nReturns a mapping between names and UUIDs of images for a given text (see also Phylopic.autocomplete to find relevant names). By default, the search will return images that come without BY, SA, and NC clauses (i.e. public domain dedication), but this can be changed using the keyword arguments.\n\nitems : Default to 1 : Specifies the number of items to return. When a single item is returned, it is return as a pair mapping the name to the UUID; when there are more than 1, they are returned as a dictionary\n\nattribution : Default to false : Specifies whether the images returned require attribution to the creator\n\nsharealike : Default to false : Specifies whether the images returned require sharing of derived products using a license with a SA clause\n\nnocommercial : Default to false : Specifies whether the images returned are prevented from being used in commercial projects\n\n\n\n\n\n","category":"function"},{"location":"#Retrieving-images","page":"Phylopic.jl","title":"Retrieving images","text":"","category":"section"},{"location":"","page":"Phylopic.jl","title":"Phylopic.jl","text":"Phylopic.thumbnail\nPhylopic.vector\nPhylopic.twitterimage\nPhylopic.source\nPhylopic.raster","category":"page"},{"location":"#Phylopic.thumbnail","page":"Phylopic.jl","title":"Phylopic.thumbnail","text":"Phylopic.thumbnail(uuid::UUIDs.UUID; resolution=192)\n\nReturns the URL (if it exists) to the thumbnails for the silhouette. The thumbnail resolution can be 64, 128, or 192 (the default).\n\n\n\n\n\n","category":"function"},{"location":"#Phylopic.vector","page":"Phylopic.jl","title":"Phylopic.vector","text":"Phylopic.vector(uuid::UUIDs.UUID)\n\nReturns the URL (if it exists) to the original vector image for the silhouette. Note that the image must be identified by its UUID, not by a string.\n\n\n\n\n\n","category":"function"},{"location":"#Phylopic.twitterimage","page":"Phylopic.jl","title":"Phylopic.twitterimage","text":"Phylopic.twitterimage(uuid::UUIDs.UUID)\n\nReturns the twitter image for a UUID.\n\n\n\n\n\n","category":"function"},{"location":"#Phylopic.source","page":"Phylopic.jl","title":"Phylopic.source","text":"Phylopic.source(uuid::UUIDs.UUID)\n\nReturns the source image for a UUID.\n\n\n\n\n\n","category":"function"},{"location":"#Phylopic.raster","page":"Phylopic.jl","title":"Phylopic.raster","text":"Phylopic.raster(uuid::UUIDs.UUID, resl)\n\nReturns the URL to an image in raster format, at the given resolution. Available resolutions for any image can be obtained with Phylopic.available_resolutions.\n\n\n\n\n\nPhylopic.raster(uuid::UUIDs.UUID)\n\nReturns the URL to an image in raster format when no resolution is specified. In this case, the first (usually the largest) image will be returned.\n\n\n\n\n\n","category":"function"},{"location":"#Additional-functions","page":"Phylopic.jl","title":"Additional functions","text":"","category":"section"},{"location":"","page":"Phylopic.jl","title":"Phylopic.jl","text":"Phylopic.attribution\nPhylopic.available_resolutions","category":"page"},{"location":"#Phylopic.attribution","page":"Phylopic.jl","title":"Phylopic.attribution","text":"Phylopic.attribution(uuid::UUIDs.UUID)\n\nGenerates a string for the attribution of an image, as identified by its uuid. This string is markdown-formatted, and will include a link to the license.\n\n\n\n\n\n","category":"function"},{"location":"#Phylopic.available_resolutions","page":"Phylopic.jl","title":"Phylopic.available_resolutions","text":"Phylopic.available_resolutions(uuid::UUIDs.UUID)\n\nReturns the available resolutions for a raster image given its UUID. The resolutions are given as a string, and can be passed as a second argument to the Phylopic.raster function. As the raster sizes can be different, there is no default argument to Phylopic.raster, and the first image will be used instead.\n\n\n\n\n\n","category":"function"},{"location":"#API-interaction-functions","page":"Phylopic.jl","title":"API interaction functions","text":"","category":"section"},{"location":"","page":"Phylopic.jl","title":"Phylopic.jl","text":"Phylopic.ping\nPhylopic.build","category":"page"},{"location":"#Phylopic.ping","page":"Phylopic.jl","title":"Phylopic.ping","text":"Phylopic.ping()\n\nThis function will perform a simple ping of the API, and return nothing if it is responding, and throw and ErrorException (containing the string \"not responding\") if the API does not returns a 204 No Content success status.\n\n\n\n\n\n","category":"function"},{"location":"#Phylopic.build","page":"Phylopic.jl","title":"Phylopic.build","text":"Phylopic.build()\n\nReturns the current build to perform the queries\n\n\n\n\n\n","category":"function"},{"location":"internals/#Internals","page":"Internals","title":"Internals","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Phylopic._get_uuids_at_page","category":"page"},{"location":"internals/#Phylopic._get_uuids_at_page","page":"Internals","title":"Phylopic._get_uuids_at_page","text":"_get_uuids_at_page(query, page)\n\nThis function is an internal helped function to return an array of pairs, wherein each pair maps a name to a UUID, for a given query and page. These outpurs are collected in a dictionary by Phylopic.names.\n\n\n\n\n\n","category":"function"}]
}
