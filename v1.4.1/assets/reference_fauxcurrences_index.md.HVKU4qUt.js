import{_ as l,C as o,c as p,o as d,j as e,a,ag as n,G as t,w as r}from"./chunks/framework.DfgxSEAC.js";const E=JSON.parse('{"title":"Generation of fauxcurrences","description":"","frontmatter":{},"headers":[],"relativePath":"reference/fauxcurrences/index.md","filePath":"reference/fauxcurrences/index.md","lastUpdated":null}'),c={name:"reference/fauxcurrences/index.md"},u={class:"jldocstring custom-block",open:""},h={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""};function D(S,s,w,P,L,B){const i=o("Badge");return d(),p("div",null,[s[64]||(s[64]=e("h1",{id:"Generation-of-fauxcurrences",tabindex:"-1"},[a("Generation of fauxcurrences "),e("a",{class:"header-anchor",href:"#Generation-of-fauxcurrences","aria-label":'Permalink to "Generation of fauxcurrences {#Generation-of-fauxcurrences}"'},"â€‹")],-1)),e("details",u,[e("summary",null,[s[0]||(s[0]=e("a",{id:"Fauxcurrences.bootstrap!",href:"#Fauxcurrences.bootstrap!"},[e("span",{class:"jlbinding"},"Fauxcurrences.bootstrap!")],-1)),s[1]||(s[1]=a()),t(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[3]||(s[3]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">bootstrap!</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(sim, layer, obs, obs_intra, obs_inter, sim_intra, sim_inter)</span></span></code></pre></div><p>Generates the initial proposition for points - this function generates the points for all taxa at once, so some knowledge of the distance matrices is required. Note that this function is modifying the <em>bootstrapped</em> object, in order to make be as efficient as possible.</p><p>Specifically, the first point for each taxa is picked to respect the maximal inter-specific distances, and then the following points are picked to respect the intra and inter-specific distances. Points after the first one are added <em>at random</em>, so there can be an accumulation of points in some species early on.</p><p>Note that this function is not particularly efficient, but this is a little bit of over-head for every simulation. The only guarantee offered is that the distances are not above the maximal distances in the dataset, there is no reason to expect that the distribution of distances within or across taxa will be respected.</p>',4)),t(i,{type:"info",class:"source-link",text:"source"},{default:r(()=>s[2]||(s[2]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/a260be6e69933ef7379a3554aaf2e9418e1aa8e5/Fauxcurrences/src/bootstrap.jl#L1-L19",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",h,[e("summary",null,[s[4]||(s[4]=e("a",{id:"Fauxcurrences.preallocate_simulated_points",href:"#Fauxcurrences.preallocate_simulated_points"},[e("span",{class:"jlbinding"},"Fauxcurrences.preallocate_simulated_points")],-1)),s[5]||(s[5]=a()),t(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[7]||(s[7]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">preallocate_simulated_points</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(obs; samples</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">=</span><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">size</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">.(obs, </span><span style="--shiki-light:#DF69BA;--shiki-dark:#D699B6;">2</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">))</span></span></code></pre></div><p>Create an empty matrix given a series of observations, and a number of samples to keep in the simulated dataset for each series of observations.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:r(()=>s[6]||(s[6]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/a260be6e69933ef7379a3554aaf2e9418e1aa8e5/Fauxcurrences/src/bootstrap.jl#L67-L72",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",k,[e("summary",null,[s[8]||(s[8]=e("a",{id:"Fauxcurrences.get_valid_coordinates",href:"#Fauxcurrences.get_valid_coordinates"},[e("span",{class:"jlbinding"},"Fauxcurrences.get_valid_coordinates")],-1)),s[9]||(s[9]=a()),t(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[11]||(s[11]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">get_valid_coordinates</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(observations</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">R</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">, layer</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">T</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">) </span><span style="--shiki-light:#F85552;--shiki-dark:#E67E80;">where</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;"> {R </span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">&lt;:</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;"> AbstractOccurrenceCollection</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">, T </span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">&lt;:</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;"> SDMLayer</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">}</span></span></code></pre></div><p>Get the coordinates for a list of observations, filtering the ones that do not correspond to valid layer positions. Valid layer positions are defined as falling within a valued pixel from the layer.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:r(()=>s[10]||(s[10]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/a260be6e69933ef7379a3554aaf2e9418e1aa8e5/Fauxcurrences/src/coordinates.jl#L1-L7",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",b,[e("summary",null,[s[12]||(s[12]=e("a",{id:"Fauxcurrences.step!",href:"#Fauxcurrences.step!"},[e("span",{class:"jlbinding"},"Fauxcurrences.step!")],-1)),s[13]||(s[13]=a()),t(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[15]||(s[15]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">Fauxcurrences</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">.</span><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">step!</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(sim, layer, W, obs_intra, obs_inter, sim_intra, sim_inter, bin_intra, bin_inter, bin_s_intra, bin_s_inter, distance)</span></span></code></pre></div>',1)),t(i,{type:"info",class:"source-link",text:"source"},{default:r(()=>s[14]||(s[14]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/a260be6e69933ef7379a3554aaf2e9418e1aa8e5/Fauxcurrences/src/step.jl#L1-L3",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",g,[e("summary",null,[s[16]||(s[16]=e("a",{id:"Fauxcurrences._random_point",href:"#Fauxcurrences._random_point"},[e("span",{class:"jlbinding"},"Fauxcurrences._random_point")],-1)),s[17]||(s[17]=a()),t(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[19]||(s[19]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">_random_point</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(ref, d; R</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">Fauxcurrences</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">.</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">_earth_radius)</span></span></code></pre></div><p>This solves the direct (first) geodetic problem assuming Haversine distances are a correct approximation of the distance between points.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:r(()=>s[18]||(s[18]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/a260be6e69933ef7379a3554aaf2e9418e1aa8e5/Fauxcurrences/src/utilities.jl#L1-L6",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",_,[e("summary",null,[s[20]||(s[20]=e("a",{id:"Fauxcurrences._generate_new_random_point",href:"#Fauxcurrences._generate_new_random_point"},[e("span",{class:"jlbinding"},"Fauxcurrences._generate_new_random_point")],-1)),s[21]||(s[21]=a()),t(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[23]||(s[23]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">_generate_new_random_point</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(layer, points, distances)</span></span></code></pre></div><p>Generates a new random point (that must fall within a valued cell of <code>layer</code>) based on a collection of <code>points</code> and a <code>Dxy</code> distance matrix. The algorithm works by sampling a point, a distance in the matrix, and then generates a new point through a call to <code>_random_point</code>. Note that the distance is multiplied by the square root of a random deviate within the unit interval, in order to have points that fall uniformly within the circle defined by the sampled distance. In the absence of this correction, the distribution of points is biased towards the center.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:r(()=>s[22]||(s[22]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/a260be6e69933ef7379a3554aaf2e9418e1aa8e5/Fauxcurrences/src/utilities.jl#L22-L33",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",f,[e("summary",null,[s[24]||(s[24]=e("a",{id:"Fauxcurrences._bin_distribution",href:"#Fauxcurrences._bin_distribution"},[e("span",{class:"jlbinding"},"Fauxcurrences._bin_distribution")],-1)),s[25]||(s[25]=a()),t(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[27]||(s[27]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">_bin_distribution</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(D</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">Matrix{Float64}</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">, m</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">Float64</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">)</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">Vector{Float64}</span></span></code></pre></div><p>Bin a distance matrix, using a default count of 20 bins. This function is instrumental in the package, as it is used internally to calculate the divergence between the observed and simulated distances distributions. This specific implementation had the least-worst performance during a series of benchmarks, but in practice the package is going to spend a lot of time running it. It is a prime candidate for optimisation.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:r(()=>s[26]||(s[26]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/a260be6e69933ef7379a3554aaf2e9418e1aa8e5/Fauxcurrences/src/utilities.jl#L46-L55",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",m,[e("summary",null,[s[28]||(s[28]=e("a",{id:"Fauxcurrences._bin_distribution!",href:"#Fauxcurrences._bin_distribution!"},[e("span",{class:"jlbinding"},"Fauxcurrences._bin_distribution!")],-1)),s[29]||(s[29]=a()),t(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[31]||(s[31]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">_bin_distribution!</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(c</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">Vector{Float64}</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">, D</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">Matrix{Float64}</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">, m</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">Float64</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">)</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">Vector{Float64}</span></span></code></pre></div><p>In-place allocation of the distribution binning. This function is the one that is used internally to over-write the scores.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:r(()=>s[30]||(s[30]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/a260be6e69933ef7379a3554aaf2e9418e1aa8e5/Fauxcurrences/src/utilities.jl#L61-L66",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",y,[e("summary",null,[s[32]||(s[32]=e("a",{id:"Fauxcurrences._distance_between_binned_distributions",href:"#Fauxcurrences._distance_between_binned_distributions"},[e("span",{class:"jlbinding"},"Fauxcurrences._distance_between_binned_distributions")],-1)),s[33]||(s[33]=a()),t(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[35]||(s[35]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">_distance_between_binned_distributions</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(p, q)</span></span></code></pre></div><p>Returns the Jensen-Shannon distance (i.e. the square root of the JS divergence) for the two distance matrices. This version is preferred to the KL divergence in the original implementation as it prevents the <code>Inf</code> values when p(x)=0 and q(x)&gt;0. The JS divergences is bounded between 0 and the natural log of 2, which gives an absolute measure of fit allowing to compare the solutions. Note that the value returned is <em>already</em> corrected, so it can be at most 1.0, and at best (identical matrices) 0.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:r(()=>s[34]||(s[34]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/a260be6e69933ef7379a3554aaf2e9418e1aa8e5/Fauxcurrences/src/utilities.jl#L80-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",A,[e("summary",null,[s[36]||(s[36]=e("a",{id:"Fauxcurrences.preallocate_distance_matrices",href:"#Fauxcurrences.preallocate_distance_matrices"},[e("span",{class:"jlbinding"},"Fauxcurrences.preallocate_distance_matrices")],-1)),s[37]||(s[37]=a()),t(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[39]||(s[39]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">preallocate_distance_matrices</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(obs; samples</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">=</span><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">size</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">.(obs, </span><span style="--shiki-light:#DF69BA;--shiki-dark:#D699B6;">2</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">))</span></span></code></pre></div><p>Generates the internal distance matrices.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:r(()=>s[38]||(s[38]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/a260be6e69933ef7379a3554aaf2e9418e1aa8e5/Fauxcurrences/src/utilities.jl#L95-L99",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",C,[e("summary",null,[s[40]||(s[40]=e("a",{id:"Fauxcurrences.measure_intraspecific_distances!",href:"#Fauxcurrences.measure_intraspecific_distances!"},[e("span",{class:"jlbinding"},"Fauxcurrences.measure_intraspecific_distances!")],-1)),s[41]||(s[41]=a()),t(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[43]||(s[43]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">measure_intraspecific_distances!</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(intra, obs; updated</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">=</span><span style="--shiki-light:#DF69BA;--shiki-dark:#D699B6;">1</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">:</span><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">length</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(obs))</span></span></code></pre></div><p>Updates the matrices for intraspecific distances; note that internally, the <code>updated</code> keyword argument is going to change, to only replace what needs to be replaced.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:r(()=>s[42]||(s[42]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/a260be6e69933ef7379a3554aaf2e9418e1aa8e5/Fauxcurrences/src/utilities.jl#L114-L120",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",v,[e("summary",null,[s[44]||(s[44]=e("a",{id:"Fauxcurrences.measure_interspecific_distances!",href:"#Fauxcurrences.measure_interspecific_distances!"},[e("span",{class:"jlbinding"},"Fauxcurrences.measure_interspecific_distances!")],-1)),s[45]||(s[45]=a()),t(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[47]||(s[47]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">measure_interspecific_distances!</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(inter, obs; updated</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">=</span><span style="--shiki-light:#DF69BA;--shiki-dark:#D699B6;">1</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">:</span><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">length</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(obs))</span></span></code></pre></div><p>Updates the matrices for interspecific distances; note that internally, the <code>updated</code> keyword argument is going to change, to only replace what needs to be replaced.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:r(()=>s[46]||(s[46]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/a260be6e69933ef7379a3554aaf2e9418e1aa8e5/Fauxcurrences/src/utilities.jl#L129-L135",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",x,[e("summary",null,[s[48]||(s[48]=e("a",{id:"Fauxcurrences.score_distributions",href:"#Fauxcurrences.score_distributions"},[e("span",{class:"jlbinding"},"Fauxcurrences.score_distributions")],-1)),s[49]||(s[49]=a()),t(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[51]||(s[51]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">score_distributions</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(W, bin_intra, bin_s_intra, bin_inter, bin_s_inter)</span></span></code></pre></div><p>Performs the actual score of the distributions, based on the weight matrix.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:r(()=>s[50]||(s[50]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/a260be6e69933ef7379a3554aaf2e9418e1aa8e5/Fauxcurrences/src/utilities.jl#L153-L157",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",j,[e("summary",null,[s[52]||(s[52]=e("a",{id:"Fauxcurrences.equal_weights",href:"#Fauxcurrences.equal_weights"},[e("span",{class:"jlbinding"},"Fauxcurrences.equal_weights")],-1)),s[53]||(s[53]=a()),t(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[55]||(s[55]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">equal_weights</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(n)</span></span></code></pre></div><p>All matrices have the same weight</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:r(()=>s[54]||(s[54]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/a260be6e69933ef7379a3554aaf2e9418e1aa8e5/Fauxcurrences/src/weightmatrices.jl#L1-L5",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",F,[e("summary",null,[s[56]||(s[56]=e("a",{id:"Fauxcurrences.weighted_components",href:"#Fauxcurrences.weighted_components"},[e("span",{class:"jlbinding"},"Fauxcurrences.weighted_components")],-1)),s[57]||(s[57]=a()),t(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[59]||(s[59]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">weighted_components</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(n, intra)</span></span></code></pre></div><p>The intra-specific component has relative weight <code>intra</code> â€“ for a value of 1.0, the model is a purely intra-specific one</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:r(()=>s[58]||(s[58]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/a260be6e69933ef7379a3554aaf2e9418e1aa8e5/Fauxcurrences/src/weightmatrices.jl#L16-L21",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",T,[e("summary",null,[s[60]||(s[60]=e("a",{id:"Fauxcurrences.equally_weighted_components",href:"#Fauxcurrences.equally_weighted_components"},[e("span",{class:"jlbinding"},"Fauxcurrences.equally_weighted_components")],-1)),s[61]||(s[61]=a()),t(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[63]||(s[63]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">equally_weighted_components</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(n)</span></span></code></pre></div><p>The intra and inter components have the same weight, which means the inter-specific matrices can have less cumulative weight</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:r(()=>s[62]||(s[62]=[e("a",{href:"https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/a260be6e69933ef7379a3554aaf2e9418e1aa8e5/Fauxcurrences/src/weightmatrices.jl#L36-L41",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})])])}const I=l(c,[["render",D]]);export{E as __pageData,I as default};
