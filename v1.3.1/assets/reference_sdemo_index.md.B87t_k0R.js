import{_ as n,C as o,c as r,o as p,j as e,a as i,ag as a,G as l}from"./chunks/framework.CDhplf9O.js";const x=JSON.parse('{"title":"Tools for SDM demos and education","description":"","frontmatter":{},"headers":[],"relativePath":"reference/sdemo/index.md","filePath":"reference/sdemo/index.md","lastUpdated":null}'),d={name:"reference/sdemo/index.md"},h={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""};function j(_,s,M,P,F,L){const t=o("Badge");return p(),r("div",null,[s[45]||(s[45]=e("h1",{id:"Tools-for-SDM-demos-and-education",tabindex:"-1"},[i("Tools for SDM demos and education "),e("a",{class:"header-anchor",href:"#Tools-for-SDM-demos-and-education","aria-label":'Permalink to "Tools for SDM demos and education {#Tools-for-SDM-demos-and-education}"'},"​")],-1)),s[46]||(s[46]=e("h2",{id:"The-prediction-pipeline",tabindex:"-1"},[i("The prediction pipeline "),e("a",{class:"header-anchor",href:"#The-prediction-pipeline","aria-label":'Permalink to "The prediction pipeline {#The-prediction-pipeline}"'},"​")],-1)),e("details",h,[e("summary",null,[s[0]||(s[0]=e("a",{id:"SDeMo.AbstractSDM",href:"#SDeMo.AbstractSDM"},[e("span",{class:"jlbinding"},"SDeMo.AbstractSDM")],-1)),s[1]||(s[1]=i()),l(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[2]||(s[2]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">AbstractSDM</span></span></code></pre></div><p>This abstract type covers both the regular and the ensemble models.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/d240686de45fba9c81a5a6f61fe6d675184f4616/SDeMo/src/models.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",c,[e("summary",null,[s[3]||(s[3]=e("a",{id:"SDeMo.AbstractEnsembleSDM",href:"#SDeMo.AbstractEnsembleSDM"},[e("span",{class:"jlbinding"},"SDeMo.AbstractEnsembleSDM")],-1)),s[4]||(s[4]=i()),l(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[5]||(s[5]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">AbstractEnsembleSDM</span></span></code></pre></div><p>This abstract types covers model that combine different SDMs to make a prediction, which currently covers <code>Bagging</code> and <code>Ensemble</code>.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/d240686de45fba9c81a5a6f61fe6d675184f4616/SDeMo/src/models.jl#L8-L12" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",k,[e("summary",null,[s[6]||(s[6]=e("a",{id:"SDeMo.SDM",href:"#SDeMo.SDM"},[e("span",{class:"jlbinding"},"SDeMo.SDM")],-1)),s[7]||(s[7]=i()),l(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[8]||(s[8]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">SDM</span></span></code></pre></div><p>This type specifies a <em>full</em> model, which is composed of a transformer (which applies a transformation on the data), a classifier (which returns a quantitative score), a threshold (above which the score corresponds to the prediction of a presence).</p><p>In addition, the SDM carries with it the training features and labels, as well as a vector of indices indicating which variables are actually used by the model.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/d240686de45fba9c81a5a6f61fe6d675184f4616/SDeMo/src/models.jl#L29-L40" target="_blank" rel="noreferrer">source</a></p>',4))]),e("details",u,[e("summary",null,[s[9]||(s[9]=e("a",{id:"SDeMo.Transformer",href:"#SDeMo.Transformer"},[e("span",{class:"jlbinding"},"SDeMo.Transformer")],-1)),s[10]||(s[10]=i()),l(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[11]||(s[11]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">Transformer</span></span></code></pre></div><p>This abstract type covers all transformations that are applied to the data before fitting the classifier.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/d240686de45fba9c81a5a6f61fe6d675184f4616/SDeMo/src/models.jl#L15-L19" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",b,[e("summary",null,[s[12]||(s[12]=e("a",{id:"SDeMo.Classifier",href:"#SDeMo.Classifier"},[e("span",{class:"jlbinding"},"SDeMo.Classifier")],-1)),s[13]||(s[13]=i()),l(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[14]||(s[14]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">Classifier</span></span></code></pre></div><p>This abstract type covers all algorithms to convert transformed data into prediction.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/d240686de45fba9c81a5a6f61fe6d675184f4616/SDeMo/src/models.jl#L22-L26" target="_blank" rel="noreferrer">source</a></p>',3))]),s[47]||(s[47]=e("h3",{id:"Utility-functions",tabindex:"-1"},[i("Utility functions "),e("a",{class:"header-anchor",href:"#Utility-functions","aria-label":'Permalink to "Utility functions {#Utility-functions}"'},"​")],-1)),e("details",f,[e("summary",null,[s[15]||(s[15]=e("a",{id:"SDeMo.features",href:"#SDeMo.features"},[e("span",{class:"jlbinding"},"SDeMo.features")],-1)),s[16]||(s[16]=i()),l(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[17]||(s[17]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">features</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(sdm</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">SDM</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">)</span></span></code></pre></div><p>Returns the features stored in the field <code>X</code> of the SDM. Note that the features are an array, and this does not return a copy of it – any change made to the output of this function <em>will</em> change the content of the SDM features.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/d240686de45fba9c81a5a6f61fe6d675184f4616/SDeMo/src/models.jl#L81-L87" target="_blank" rel="noreferrer">source</a></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">features</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(sdm</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">SDM</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">, n)</span></span></code></pre></div><p>Returns the <em>n</em>-th feature stored in the field <code>X</code> of the SDM.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/d240686de45fba9c81a5a6f61fe6d675184f4616/SDeMo/src/models.jl#L90-L94" target="_blank" rel="noreferrer">source</a></p>',6))]),e("details",g,[e("summary",null,[s[18]||(s[18]=e("a",{id:"SDeMo.labels",href:"#SDeMo.labels"},[e("span",{class:"jlbinding"},"SDeMo.labels")],-1)),s[19]||(s[19]=i()),l(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[20]||(s[20]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">labels</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(sdm</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">SDM</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">)</span></span></code></pre></div><p>Returns the labels stored in the field <code>y</code> of the SDM – note that this is not a copy of the labels, but the object itself.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/d240686de45fba9c81a5a6f61fe6d675184f4616/SDeMo/src/models.jl#L110-L115" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",m,[e("summary",null,[s[21]||(s[21]=e("a",{id:"SDeMo.threshold",href:"#SDeMo.threshold"},[e("span",{class:"jlbinding"},"SDeMo.threshold")],-1)),s[22]||(s[22]=i()),l(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[23]||(s[23]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">threshold</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(sdm</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">SDM</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">)</span></span></code></pre></div><p>This returns the value above which the score returned by the SDM is considered to be a presence.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/d240686de45fba9c81a5a6f61fe6d675184f4616/SDeMo/src/models.jl#L66-L71" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",y,[e("summary",null,[s[24]||(s[24]=e("a",{id:"SDeMo.threshold!",href:"#SDeMo.threshold!"},[e("span",{class:"jlbinding"},"SDeMo.threshold!")],-1)),s[25]||(s[25]=i()),l(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[26]||(s[26]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">threshold!</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(sdm</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">SDM</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">, τ)</span></span></code></pre></div><p>Sets the value of the threshold.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/d240686de45fba9c81a5a6f61fe6d675184f4616/SDeMo/src/models.jl#L74-L78" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",A,[e("summary",null,[s[27]||(s[27]=e("a",{id:"SDeMo.variables",href:"#SDeMo.variables"},[e("span",{class:"jlbinding"},"SDeMo.variables")],-1)),s[28]||(s[28]=i()),l(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[29]||(s[29]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">variables</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(sdm</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">SDM</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">)</span></span></code></pre></div><p>Returns the list of variables used by the SDM – these <em>may</em> be ordered by importance. This does not return a copy of the variables array, but the array itself.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/d240686de45fba9c81a5a6f61fe6d675184f4616/SDeMo/src/models.jl#L118-L124" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",D,[e("summary",null,[s[30]||(s[30]=e("a",{id:"SDeMo.variables!",href:"#SDeMo.variables!"},[e("span",{class:"jlbinding"},"SDeMo.variables!")],-1)),s[31]||(s[31]=i()),l(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[32]||(s[32]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">variables!</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(sdm</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">SDM</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">, v)</span></span></code></pre></div><p>Sets the list of variables.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/d240686de45fba9c81a5a6f61fe6d675184f4616/SDeMo/src/models.jl#L127-L131" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",C,[e("summary",null,[s[33]||(s[33]=e("a",{id:"SDeMo.instance",href:"#SDeMo.instance"},[e("span",{class:"jlbinding"},"SDeMo.instance")],-1)),s[34]||(s[34]=i()),l(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[35]||(s[35]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">instance</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(sdm</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">SDM</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">, n; strict</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">=</span><span style="--shiki-light:#35A77C;--shiki-dark:#83C092;">true</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">)</span></span></code></pre></div><p>Returns the <em>n</em>-th instance stored in the field <code>X</code> of the SDM. If the keyword argument <code>strict</code> is <code>true</code>, only the variables used for prediction are returned.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/d240686de45fba9c81a5a6f61fe6d675184f4616/SDeMo/src/models.jl#L97-L101" target="_blank" rel="noreferrer">source</a></p>',3))]),s[48]||(s[48]=e("h3",{id:"Training-and-predicting",tabindex:"-1"},[i("Training and predicting "),e("a",{class:"header-anchor",href:"#Training-and-predicting","aria-label":'Permalink to "Training and predicting {#Training-and-predicting}"'},"​")],-1)),e("details",v,[e("summary",null,[s[36]||(s[36]=e("a",{id:"SDeMo.train!",href:"#SDeMo.train!"},[e("span",{class:"jlbinding"},"SDeMo.train!")],-1)),s[37]||(s[37]=i()),l(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[38]||(s[38]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">train!</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(ensemble</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">Bagging</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">; kwargs</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">...</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">)</span></span></code></pre></div><p>Trains all the model in an ensemble model - the keyword arguments are passed to <code>train!</code> for each model. Note that this retrains the <em>entire</em> model, which includes the transformers.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/d240686de45fba9c81a5a6f61fe6d675184f4616/SDeMo/src/ensembles/pipeline.jl#L12-L18" target="_blank" rel="noreferrer">source</a></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">train!</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(ensemble</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">Ensemble</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">; kwargs</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">...</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">)</span></span></code></pre></div><p>Trains all the model in an heterogeneous ensemble model - the keyword arguments are passed to <code>train!</code> for each model. Note that this retrains the <em>entire</em> model, which includes the transformers.</p><p>The keywod arguments are passed to <code>train!</code> and can include the <code>training</code> indices.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/d240686de45fba9c81a5a6f61fe6d675184f4616/SDeMo/src/ensembles/pipeline.jl#L60-L69" target="_blank" rel="noreferrer">source</a></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">train!</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(sdm</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">SDM</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">; threshold</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">=</span><span style="--shiki-light:#35A77C;--shiki-dark:#83C092;">true</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">, training</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">:, optimality</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">mcc)</span></span></code></pre></div><p>This is the main training function to train a SDM.</p><p>The three keyword arguments are:</p><ul><li><p><code>training</code>: defaults to <code>:</code>, and is the range (or alternatively the indices) of the data that are used to train the model</p></li><li><p><code>threshold</code>: defaults to <code>true</code>, and performs moving threshold by evaluating 200 possible values between the minimum and maximum output of the model, and returning the one that is optimal</p></li><li><p><code>optimality</code>: defaults to <code>mcc</code>, and is the function applied to the confusion matrix to evaluate which value of the threshold is the best</p></li><li><p><code>absences</code>: defaults to <code>false</code>, and indicates whether the (pseudo) absences are used to train the transformer; when using actual absences, this should be set to <code>true</code></p></li></ul><p>Internally, this function trains the transformer, then projects the data, then trains the classifier. If <code>threshold</code> is <code>true</code>, the threshold is then optimized.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/d240686de45fba9c81a5a6f61fe6d675184f4616/SDeMo/src/pipeline.jl#L1-L20" target="_blank" rel="noreferrer">source</a></p>',13))]),e("details",S,[e("summary",null,[s[39]||(s[39]=e("a",{id:"StatsAPI.predict",href:"#StatsAPI.predict"},[e("span",{class:"jlbinding"},"StatsAPI.predict")],-1)),s[40]||(s[40]=i()),l(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[41]||(s[41]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">predict</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(model</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">RegressionModel</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">, [newX])</span></span></code></pre></div><p>Form the predicted response of <code>model</code>. An object with new covariate values <code>newX</code> can be supplied, which should have the same type and structure as that used to fit <code>model</code>; e.g. for a GLM it would generally be a <code>DataFrame</code> with the same variable names as the original predictors.</p><p><a href="https://github.com/JuliaStats/StatsAPI.jl/blob/v1.7.0/src/regressionmodel.jl#L74-L80" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",T,[e("summary",null,[s[42]||(s[42]=e("a",{id:"SDeMo.reset!",href:"#SDeMo.reset!"},[e("span",{class:"jlbinding"},"SDeMo.reset!")],-1)),s[43]||(s[43]=i()),l(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[44]||(s[44]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">reset!</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(sdm</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">SDM</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">, thr</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">=</span><span style="--shiki-light:#DF69BA;--shiki-dark:#D699B6;">0.5</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">)</span></span></code></pre></div><p>Resets a model, with a potentially specified value of the threshold. This amounts to re-using all the variables, and removing the tuned threshold version.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/d240686de45fba9c81a5a6f61fe6d675184f4616/SDeMo/src/pipeline.jl#L86-L91" target="_blank" rel="noreferrer">source</a></p>',3))])])}const E=n(d,[["render",j]]);export{x as __pageData,E as default};
