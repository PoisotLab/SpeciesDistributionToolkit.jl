import{_ as o,c as l,j as s,a as i,G as t,a2 as n,B as p,o as r}from"./chunks/framework.DF-HKlxZ.js";const j=JSON.parse('{"title":"Pseudo absences generation","description":"","frontmatter":{},"headers":[],"relativePath":"reference/integration/pseudoabsences.md","filePath":"reference/integration/pseudoabsences.md","lastUpdated":null}'),d={name:"reference/integration/pseudoabsences.md"},h={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""};function y(m,e,f,A,C,D){const a=p("Badge");return r(),l("div",null,[e[18]||(e[18]=s("h1",{id:"Pseudo-absences-generation",tabindex:"-1"},[i("Pseudo absences generation "),s("a",{class:"header-anchor",href:"#Pseudo-absences-generation","aria-label":'Permalink to "Pseudo absences generation {#Pseudo-absences-generation}"'},"​")],-1)),e[19]||(e[19]=s("h2",{id:"Supported-algorithms",tabindex:"-1"},[i("Supported algorithms "),s("a",{class:"header-anchor",href:"#Supported-algorithms","aria-label":'Permalink to "Supported algorithms {#Supported-algorithms}"'},"​")],-1)),s("details",h,[s("summary",null,[e[0]||(e[0]=s("a",{id:"SpeciesDistributionToolkit.PseudoAbsenceGenerator",href:"#SpeciesDistributionToolkit.PseudoAbsenceGenerator"},[s("span",{class:"jlbinding"},"SpeciesDistributionToolkit.PseudoAbsenceGenerator")],-1)),e[1]||(e[1]=i()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[2]||(e[2]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">PseudoAbsenceGenerator</span></span></code></pre></div><p>Abstract type to which all of the pseudo-absences generator types belong. Note that the pseudo-absence types are <em>singleton</em> types, and the arguments are passed when generating the pseudo-absence mask.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/b50fc08ec3eded0d54c527d81376c13a9e6a1ef6/src/pseudoabsences.jl#L1-L7" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",k,[s("summary",null,[e[3]||(e[3]=s("a",{id:"SpeciesDistributionToolkit.WithinRadius",href:"#SpeciesDistributionToolkit.WithinRadius"},[s("span",{class:"jlbinding"},"SpeciesDistributionToolkit.WithinRadius")],-1)),e[4]||(e[4]=i()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[5]||(e[5]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">WithinRadius</span></span></code></pre></div><p>Generates pseudo-absences within a set radius (in kilometers) around each occurrence</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/b50fc08ec3eded0d54c527d81376c13a9e6a1ef6/src/pseudoabsences.jl#L10-L15" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",c,[s("summary",null,[e[6]||(e[6]=s("a",{id:"SpeciesDistributionToolkit.SurfaceRangeEnvelope",href:"#SpeciesDistributionToolkit.SurfaceRangeEnvelope"},[s("span",{class:"jlbinding"},"SpeciesDistributionToolkit.SurfaceRangeEnvelope")],-1)),e[7]||(e[7]=i()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[8]||(e[8]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">SurfaceRangeEnvelope</span></span></code></pre></div><p>Generates pseudo-absences at random within the geographic range covered by actual occurrences</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/b50fc08ec3eded0d54c527d81376c13a9e6a1ef6/src/pseudoabsences.jl#L19-L24" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",u,[s("summary",null,[e[9]||(e[9]=s("a",{id:"SpeciesDistributionToolkit.RandomSelection",href:"#SpeciesDistributionToolkit.RandomSelection"},[s("span",{class:"jlbinding"},"SpeciesDistributionToolkit.RandomSelection")],-1)),e[10]||(e[10]=i()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[11]||(e[11]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">RandomSelection</span></span></code></pre></div><p>Generates pseudo-absences at random within the layer</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/b50fc08ec3eded0d54c527d81376c13a9e6a1ef6/src/pseudoabsences.jl#L28-L32" target="_blank" rel="noreferrer">source</a></p>',3))]),e[20]||(e[20]=s("h2",{id:"Generation-of-a-pseudo-absence-mask",tabindex:"-1"},[i("Generation of a pseudo-absence mask "),s("a",{class:"header-anchor",href:"#Generation-of-a-pseudo-absence-mask","aria-label":'Permalink to "Generation of a pseudo-absence mask {#Generation-of-a-pseudo-absence-mask}"'},"​")],-1)),e[21]||(e[21]=s("p",null,[i("The above algorithms are used in conjunction with "),s("code",null,"pseudoabsencemask"),i(" to generate a Boolean layer that contains all pixels in which a background point can be. They do "),s("em",null,"not"),i(" generate background points directly, in order to allow more flexible workflows based on clipping Boolean masks, for example.")],-1)),s("details",b,[s("summary",null,[e[12]||(e[12]=s("a",{id:"SpeciesDistributionToolkit.pseudoabsencemask",href:"#SpeciesDistributionToolkit.pseudoabsencemask"},[s("span",{class:"jlbinding"},"SpeciesDistributionToolkit.pseudoabsencemask")],-1)),e[13]||(e[13]=i()),t(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[14]||(e[14]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">pseudoabsencemask</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">Type{RandomSelection}</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">, presence</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">T</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">) </span><span style="--shiki-light:#F85552;--shiki-dark:#E67E80;">where</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;"> {T </span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">&lt;:</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;"> SDMLayer</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">}</span></span></code></pre></div><p>Generates a mask for pseudo-absences using the random selection method. Candidate cells for the pseudo-absence mask are (i) within the bounding box of the <em>layer</em> (use <code>SurfaceRangeEnvelope</code> to use the presences bounding box), and (ii) valued in the layer.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/b50fc08ec3eded0d54c527d81376c13a9e6a1ef6/src/pseudoabsences.jl#L77-L84" target="_blank" rel="noreferrer">source</a></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">pseudoabsencemask</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">( </span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">Type{SurfaceRangeEnvelope}</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">, presences</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">T</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">) </span><span style="--shiki-light:#F85552;--shiki-dark:#E67E80;">where</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;"> {T </span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">&lt;:</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;"> SDMLayer</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">}</span></span></code></pre></div><p>Generates a mask from which pseudo-absences can be drawn, by picking cells that are (i) within the bounding box of occurrences, (ii) valued in the layer, and (iii) not already occupied by an occurrence</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/b50fc08ec3eded0d54c527d81376c13a9e6a1ef6/src/pseudoabsences.jl#L90-L96" target="_blank" rel="noreferrer">source</a></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">pseudoabsencemask</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">Type{DistanceToEvent}</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">, presence</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">T</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">; f</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">minimum) </span><span style="--shiki-light:#F85552;--shiki-dark:#E67E80;">where</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;"> {T </span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">&lt;:</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;"> SimpleSDMLayer</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">}</span></span></code></pre></div><p>Generates a mask for pseudo-absences using the distance to event method. Candidate cells are weighted according to their distance to a known observation, with far away places being more likely. Depending on the distribution of distances, it may be a very good idea to flatten this layer using <code>log</code> or an exponent. The <code>f</code> function is used to determine which distance is reported (minimum by default, can also be mean or median).</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/b50fc08ec3eded0d54c527d81376c13a9e6a1ef6/src/pseudoabsences.jl#L115-L124" target="_blank" rel="noreferrer">source</a></p>',9))]),e[22]||(e[22]=s("h2",{id:"Sampling-of-background-points",tabindex:"-1"},[i("Sampling of background points "),s("a",{class:"header-anchor",href:"#Sampling-of-background-points","aria-label":'Permalink to "Sampling of background points {#Sampling-of-background-points}"'},"​")],-1)),s("details",g,[s("summary",null,[e[15]||(e[15]=s("a",{id:"SpeciesDistributionToolkit.backgroundpoints",href:"#SpeciesDistributionToolkit.backgroundpoints"},[s("span",{class:"jlbinding"},"SpeciesDistributionToolkit.backgroundpoints")],-1)),e[16]||(e[16]=i()),t(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[17]||(e[17]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes everforest-light everforest-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#A7C080;">backgroundpoints</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">(layer</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">T</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">, n</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">Int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">; replace</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">::</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;">Bool</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">=</span><span style="--shiki-light:#35A77C;--shiki-dark:#83C092;">false</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">, kwargs</span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">...</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">) </span><span style="--shiki-light:#F85552;--shiki-dark:#E67E80;">where</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;"> {T </span><span style="--shiki-light:#F57D26;--shiki-dark:#E69875;">&lt;:</span><span style="--shiki-light:#3A94C5;--shiki-dark:#7FBBB3;"> SimpleSDMLayer</span><span style="--shiki-light:#5C6A72;--shiki-dark:#D3C6AA;">}</span></span></code></pre></div><p>Generates background points based on a layer that gives either the location of possible points (<code>Bool</code>) or the weight of each cell in the final sample (<code>Number</code>). Note that the default value is to draw without replacement, but this can be changed using <code>replace=true</code>. The additional keywors arguments are passed to <code>StatsBase.sample</code>, which is used internally.</p><p><a href="https://github.com/PoisotLab/SpeciesDistributionToolkit.jl/blob/b50fc08ec3eded0d54c527d81376c13a9e6a1ef6/src/pseudoabsences.jl#L164-L172" target="_blank" rel="noreferrer">source</a></p>',3))])])}const T=o(d,[["render",y]]);export{j as __pageData,T as default};
