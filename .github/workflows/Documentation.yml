name: Documentation

on:
  push:
    branches:
      - main
    tags: '*'
  pull_request:

concurrency:
    group: doc-build-pipeline
    cancel-in-progress: ${{ !contains(github.ref, 'main')}}

jobs:
  OccurrencesInterface:
    permissions:
      actions: write
      contents: write
      pull-requests: read
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - name: "Bootstrap the package"
        run: julia --project=./OccurrencesInterface OccurrencesInterface/bootstrap.jl
      - uses: julia-actions/cache@v2
      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
        working-directory: OccurrencesInterface/
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
        run: julia --project=OccurrencesInterface/docs/ OccurrencesInterface/docs/make.jl
  GBIF:
    needs: [OccurrencesInterface]
    permissions:
      actions: write
      contents: write
      pull-requests: read
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - name: "Bootstrap the package"
        run: julia --project=./GBIF GBIF/bootstrap.jl
      - uses: julia-actions/cache@v2
      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
        working-directory: GBIF/
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
        run: julia --project=GBIF/docs/ GBIF/docs/make.jl
  Phylopic:
    needs: [GBIF]
    permissions:
      actions: write
      contents: write
      pull-requests: read
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - name: "Bootstrap the package"
        run: julia --project=./Phylopic Phylopic/bootstrap.jl
      - uses: julia-actions/cache@v2
      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
        working-directory: Phylopic/
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
        run: julia --project=Phylopic/docs/ Phylopic/docs/make.jl
  Fauxcurrences:
    needs: [Phylopic]
    permissions:
      actions: write
      contents: write
      pull-requests: read
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - name: "Bootstrap the package"
        run: julia --project=./Fauxcurrences Fauxcurrences/bootstrap.jl
      - uses: julia-actions/cache@v2
      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
        working-directory: Fauxcurrences/
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
        run: julia --project=Fauxcurrences/docs/ Fauxcurrences/docs/make.jl
  PseudoAbsences:
    needs: [Fauxcurrences]
    permissions:
      actions: write
      contents: write
      pull-requests: read
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - name: "Bootstrap the package"
        run: julia --project=./PseudoAbsences PseudoAbsences/bootstrap.jl
      - uses: julia-actions/cache@v2
      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
        working-directory: PseudoAbsences/
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
        run: julia --project=PseudoAbsences/docs/ PseudoAbsences/docs/make.jl
  SimpleSDMLayers:
    needs: [PseudoAbsences]
    permissions:
      actions: write
      contents: write
      pull-requests: read
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - name: "Bootstrap the package"
        run: julia --project=./SimpleSDMLayers SimpleSDMLayers/bootstrap.jl
      - uses: julia-actions/cache@v2
      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
        working-directory: SimpleSDMLayers/
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
        run: julia --project=SimpleSDMLayers/docs/ SimpleSDMLayers/docs/make.jl
  SimpleSDMDatasets:
    needs: [SimpleSDMLayers]
    permissions:
      actions: write
      contents: write
      pull-requests: read
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - name: "Bootstrap the package"
        run: julia --project=./SimpleSDMDatasets SimpleSDMDatasets/bootstrap.jl
      - uses: julia-actions/cache@v2
      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
        working-directory: SimpleSDMDatasets/
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
        run: julia --project=SimpleSDMDatasets/docs/ SimpleSDMDatasets/docs/make.jl
  SDeMo:
    needs: [SimpleSDMDatasets]
    permissions:
      actions: write
      contents: write
      pull-requests: read
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - name: "Bootstrap the package"
        run: julia --project=./SDeMo SDeMo/bootstrap.jl
      - uses: julia-actions/cache@v2
      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
        working-directory: SDeMo/
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
        run: julia --project=SDeMo/docs/ SDeMo/docs/make.jl
  SimpleSDMPolygons:
    needs: [SDeMo]
    permissions:
      actions: write
      contents: write
      pull-requests: read
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - name: "Bootstrap the package"
        run: julia --project=./SimpleSDMPolygons SimpleSDMPolygons/bootstrap.jl
      - uses: julia-actions/cache@v2
      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
        working-directory: SimpleSDMPolygons/
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
        run: julia --project=SimpleSDMPolygons/docs/ SimpleSDMPolygons/docs/make.jl
  HowTo:
    permissions:
      actions: write
      contents: write
      pull-requests: read
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - name: "Bootstrap the package"
        run: julia --project=. bootstrap.jl
      - uses: julia-actions/cache@v2
      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
      - name: Build and deploy
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
          DATADEPS_ALWAYS_ACCEPT: true
        run: julia --project=docs/ --threads=auto docs/build-howto.jl
      - name: "Upload the howto folder"
        uses: actions/upload-artifact@v4
        with:
          path: "docs/src/howto"
          name: howto-folder
  Tutorials:
    permissions:
      actions: write
      contents: write
      pull-requests: read
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - name: "Bootstrap the package"
        run: julia --project=. bootstrap.jl
      - uses: julia-actions/cache@v2
      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
      - name: Build and deploy
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
          DATADEPS_ALWAYS_ACCEPT: true
        run: julia --project=docs/ --threads=auto docs/build-tutorials.jl
      - name: "Upload the tutorials folder"
        uses: actions/upload-artifact@v4
        with:
          path: "docs/src/tutorials"
          name: tutorials-folder
  SpeciesDistributionToolkit:
    needs: [HowTo, Tutorials, SimpleSDMPolygons]
    permissions:
      actions: write
      contents: write
      pull-requests: read
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "Download the compiled how-to"
        uses: actions/download-artifact@v4
        with:
          name: howto-folder
          path: docs/src/howto
      - name: "Download the compiled tutorials"
        uses: actions/download-artifact@v4
        with:
          name: tutorials-folder
          path: docs/src/tutorials
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - name: "Bootstrap the package"
        run: julia --project=. bootstrap.jl
      - uses: julia-actions/cache@v2
      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
      - name: Build and deploy
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
          DATADEPS_ALWAYS_ACCEPT: true
        run: julia --project=docs/ --threads=auto docs/make.jl
